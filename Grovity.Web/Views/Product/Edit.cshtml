@model Grovity.Web.ViewModels.EditProductViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Product</h2>

<form id="editProduct">
    <div class="form-group">
        <label>Category</label>
        <select class="form-control" name="CategoryID">
            @foreach (var category in Model.AvailableCategories)
            {
                var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
                <option value="@category.ID" @selected>@category.Name</option>
            }
        </select>
    </div>

    <div class="form-group">
        <input type="hidden" name="ID" value="@Model.ID" />

        <label>Name</label>
        <input value="@Model.Name" name="Name" class="form-control" />
    </div>

    <div class="form-group">
        <label>Description</label>
        <input value="@Model.Description" name="Description" class="form-control" />
    </div>

    <div class="form-group">
        <label>Price</label>
        <input value="@Model.Price" name="Price" class="form-control" />
    </div>

    <button id="updateBtn" type="button">Update</button>
    <button id="cancelBtn" type="button">Cancel</button>
</form>

<script>
    $("#updateBtn").click(function () {

        $.ajax({
            type: 'POST',
            url: '@Url.Action("Edit","Product")',
            data: $("#editProduct").serialize()
        })
            .done(function (response) {
                $("#tableContiner").html(response);
                $("#actionContainer").html("");
                focusAction("tableContiner");
            })
            .fail(function (XMLRequest, textStatus, errorThrown) {
                alert("Fail")
            });
    })
    $("#cancelBtn").click(function () {
        $("#actionContainer").html("");

        focusAction("tableContiner");
    })
</script>

